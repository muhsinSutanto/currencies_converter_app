{"version":3,"sources":["utils/const.js","components/card/Index.js","utils/service.js","pages/homePage/Index.js","App.js","reportWebVitals.js","index.js"],"names":["CURRENCY_ABBRIV","Card","cur","number","handleRemove","idx","className","map","item","abbr","key","stand","onClick","fetchCurrencies","url","a","fetch","result","json","Home","useState","currencies","setCurrencies","hiddenCurren","setHiddenCurren","setNumber","showAdd","setShowAdd","selValue","setSelectValue","useEffect","then","data","allData","rates","value","Object","entries","showed","slice","catch","err","console","log","defaultValue","def","hidden","splice","handleSubmit","arr","newData","filter","newArr","concat","x","includes","type","onChange","e","target","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bb0813b.chunk.js","sourcesContent":["const BASE_URL = 'http://api.exchangeratesapi.io/v1/latest?access_key=76d6acb0420f7522a14a1700bb00123b&symbols=IDR,GBP,SGD,USD,CAD,INR,JPY,MYR,CHF,KRW&format=1'\n\nconst CURRENCY_ABBRIV = [\n    {\n        \"stand\" : \"United States Dolar\",\n        \"key\" : \"USD\"\n    },\n    {\n        \"stand\" : \"Indonesia Rupiah\",\n        \"key\": \"IDR\"\n    },\n    {\n        \"key\" : \"GBP\",\n        \"stand\": \"British Pound Sterling\"\n    },\n    {\n        \"stand\" : \"singapore Dolar\",\n        \"key\" : \"SGD\"\n    },\n    {\n        \"key\" : \"MYR\",\n        \"stand\": \"Malaysian Ringgit\"\n    },\n    {\n        \"key\" : \"CHF\",\n        \"stand\": \"Swiss Franch\"\n    },\n    {\n        \"key\" : \"JPY\",\n        \"stand\": \"Japanese Yen\"\n    },\n    {\n        \"key\" : \"INR\",\n        \"stand\": \"Indian Rupee\"\n    },\n    {\n        \"key\" : \"KRW\",\n        \"stand\": \"Korean Won\"\n    },\n    {\n        \"key\" : \"CAD\",\n        \"stand\": \"Canadian Dollar\"\n    }\n\n]\n\nexport {\n    BASE_URL,\n    CURRENCY_ABBRIV\n}","import React from 'react';\nimport './card.css'\nimport {CURRENCY_ABBRIV} from '../../utils/const'\n\nconst Card = ({cur, number, handleRemove, idx}) => {\n    return (  \n        <div className='card'>\n            <div className='card-left'>\n                <div className='card-header'>\n                    <h2>{cur[0]}</h2>\n                    <h2>{cur[1] * number}</h2>\n                </div>\n                    <h3>\n                    {\n                        CURRENCY_ABBRIV.map((item, idx) => {\n                            let abbr ;\n                            if(item.key === cur[0]){\n                                abbr = item.stand\n                            }\n\n                            return abbr\n                        })\n                    }</h3>\n                <h4>1 EUR = {cur[0]} {cur[1]}</h4>\n            </div>\n            <div className='card-right'>\n                <button onClick={()=>handleRemove(idx)}>(-)</button>\n            </div>\n        </div> \n        );\n}\n \nexport default Card;","export const fetchCurrencies = async (url) => {\n    const result = await fetch(url)\n    return result.json()\n}","import React, {useEffect, useState} from 'react';\nimport Card from '../../components/card/Index';\nimport { BASE_URL } from '../../utils/const';\nimport { fetchCurrencies } from '../../utils/service';\n\nimport './homeStyle.css'\n\nconst Home = () => {\n    const [currencies, setCurrencies] = useState([])\n    const [hiddenCurren, setHiddenCurren] = useState([])\n    const [number, setNumber] = useState(1)\n    const [showAdd, setShowAdd] = useState(true)\n    const [selValue, setSelectValue] = useState('')\n\n    useEffect(() => {\n        fetchCurrencies(BASE_URL) \n            .then(data => {\n                const allData = data.rates\n                const value = Object.entries(allData).map(data => data)\n                const showed = value.slice(0,4)\n                setCurrencies(showed)\n                setHiddenCurren(value)\n            }\n            ).catch(err => console.log(err))  \n    }, [])\n\n    const handleAddBtn = () => {\n        setShowAdd(!showAdd)\n        defaultValue()\n    }\n\n    const defaultValue = () => {\n        const def = hidden[0][0]\n        setSelectValue(def)\n    }\n\n    const handleRemove = (idx) => {\n        let data = [...currencies]\n        data.splice(idx, 1)\n        setCurrencies(data)\n    }\n\n    const handleSubmit = async () => {\n        let arr = [...currencies]\n        let allData = [...hidden]\n        let newData = allData.filter(item => (\n            item[0] == selValue\n        ))\n\n        const newArr = arr.concat(newData)\n        setCurrencies(newArr)\n        setShowAdd(!showAdd)\n    }\n\n    const hidden = hiddenCurren.filter(x => !currencies.includes(x));\n\n    return ( \n    <div className='body'>\n        \n        <div className='header-container'>\n            <div className='header-sub1'>\n                <h3>EUR - Euro</h3>\n            </div>\n            <div className='header-sub2'>\n                <h2>EUR</h2>\n                <input value={number} type='number' onChange={e => setNumber(e.target.value)}/>\n            </div>\n        </div>\n        \n        <div className='card-container'>\n            {\n                currencies.map((cur, idx) => (\n                    <Card idx={idx} cur={cur} number={number} handleRemove={handleRemove}/>\n                ))\n            }\n            {\n                !!showAdd ? (<button onClick={handleAddBtn} className='addBtn-container'>\n                    <p>(+)  Add More Currencies</p>\n                </button>) : \n                    !!hidden.length ? (\n                        <div className='option-container'>\n                            <div className='select-container'>\n                                <select value={selValue} onChange={e => setSelectValue(e.target.value)}>\n                                    {\n                                        hidden.map(item => (\n                                            <option value={item[0]}>{item[0]}</option>\n                                        ))\n                                    }\n                                </select>\n                            </div>\n                            <div className='submit-container'>\n                                <button onClick={handleSubmit}>\n                                    SUBMIT\n                                </button>\n                            </div>\n                        </div>\n                    ) : <h1>All has been added</h1>  \n            }\n        </div>\n    </div> );\n}\n \nexport default Home;","import Home from './pages/homePage/Index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}